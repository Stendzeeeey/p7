Dyn15°. Треугольник. Дан треугольник из натуральных чисел: в первой строке одно число, во второй - два числа, в третьей - три и т.д. 
Например: 5 3 4 2 4 5 6 8 2 4 Робот Петя в начальный находится на вершине треугольника и каждый следующий момент времени двигается к одному соседей числа внизу. 
Робот заканчивает свою работу когда достигает основание треугольника. Постройте такой путь передвижения по треугольнику, 
чтобы сумма чисел на пути робота оказалась максимально возможной. Ввод и вывод организовать при помощи текстовых файлов. 
В первой строке входного файла записано число N (1<N<13) - количество строк в треугольнике, в последующих N строках записаны числа треугольника построчно. 
Каждое из чисел не превосходит 99. В выходной файл нужно записать в первую строку путь робота в виде строки из символов L и R (L-переход к левому соседу, 
R - переход к правому соседу), в во вторую строку - максимальную сумму, соответствующую этому пути. 
Гарантируется, что путь достижения максимального значения только один.

with open('input.txt', 'r') as f_in:
    n = int(f_in.readline().strip())
    triangle = []
    for i in range(n):
        row = list(map(int, f_in.readline().split()))
        triangle.append(row)

max_sum = triangle[-1].copy()

for i in range(n-2, -1, -1):
    for j in range(i+1):
        max_sum[j] = triangle[i][j] + max(max_sum[j], max_sum[j+1])

path = ''
j = 0

for i in range(n-1):
    if max_sum[j] - triangle[i][j] == max_sum[j+1]:
        path += 'R'
        j += 1
    else:
        path += 'L'

with open('output.txt', 'w') as f_out:
    f_out.write(path[::-1] + '\n')
    f_out.write(str(max_sum[0]) + '\n')
